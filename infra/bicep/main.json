{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "18433045896687973575"
    }
  },
  "parameters": {
    "webappResourceGroup": {
      "type": "string"
    },
    "hostingplanName": {
      "type": "string"
    },
    "webAppName": {
      "type": "string"
    },
    "containerImage": {
      "type": "string"
    },
    "containerImageTag": {
      "type": "string"
    },
    "appServicePlanSkuName": {
      "type": "string"
    },
    "appServicePlanCapacity": {
      "type": "int"
    },
    "acrName": {
      "type": "string"
    },
    "acrResourceGroup": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageResourceGroup": {
      "type": "string"
    },
    "functionAppName": {
      "type": "string"
    },
    "functionStorageAccountName": {
      "type": "string"
    },
    "functionResourceGroup": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    },
    "tenantId": {
      "type": "string"
    },
    "subscriptionId": {
      "type": "string"
    },
    "applicationId": {
      "type": "string"
    },
    "servicePrincipalPassword": {
      "type": "string"
    },
    "twitterApiKey": {
      "type": "string"
    },
    "twitterApiSecretKey": {
      "type": "string"
    },
    "twitterAccessToken": {
      "type": "string"
    },
    "twitterAccessTokenSecret": {
      "type": "string"
    },
    "toggleSendNotifications": {
      "type": "bool"
    },
    "tableStorageName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('webappResourceGroup')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('storageResourceGroup')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('functionResourceGroup')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('hostingplanName')]",
      "resourceGroup": "[parameters('webappResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlanName": {
            "value": "[parameters('hostingplanName')]"
          },
          "appServicePlanSkuName": {
            "value": "[parameters('appServicePlanSkuName')]"
          },
          "appServicePlanCapacity": {
            "value": "[parameters('appServicePlanCapacity')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "6180523522214062616"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location into which the App Service resources should be deployed."
              }
            },
            "appServicePlanSkuName": {
              "type": "string",
              "metadata": {
                "description": "The name of the SKU to use when creating the App Service plan."
              }
            },
            "appServicePlanCapacity": {
              "type": "int",
              "metadata": {
                "description": "The number of worker instances of your App Service plan that should be provisioned."
              }
            },
            "appServicePlanName": {
              "type": "string",
              "defaultValue": "AppServicePlan",
              "metadata": {
                "description": "The name of the App Service plan."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "properties": {
                "reserved": true
              },
              "sku": {
                "name": "[parameters('appServicePlanSkuName')]",
                "capacity": "[parameters('appServicePlanCapacity')]"
              },
              "kind": "linux"
            }
          ],
          "outputs": {
            "appServicePlanResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('webappResourceGroup'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('webAppName')]",
      "resourceGroup": "[parameters('webappResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "webAppName": {
            "value": "[parameters('webAppName')]"
          },
          "appServicePlanResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('webappResourceGroup')), 'Microsoft.Resources/deployments', parameters('hostingplanName'))).outputs.appServicePlanResourceId.value]"
          },
          "acrName": {
            "value": "[parameters('acrName')]"
          },
          "acrResourceGroupName": {
            "value": "[parameters('acrResourceGroup')]"
          },
          "linuxFxVersion": {
            "value": "[format('DOCKER|{0}:{1}', parameters('containerImage'), parameters('containerImageTag'))]"
          },
          "storageAccountConnectionString": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('storageResourceGroup')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))).outputs.blobStorageConnectionString.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "3637764095353524231"
            }
          },
          "parameters": {
            "appServicePlanResourceId": {
              "type": "string"
            },
            "linuxFxVersion": {
              "type": "string",
              "defaultValue": "DOCKER|mcr.microsoft.com/appsvc/staticsite:latest"
            },
            "webAppName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "acrName": {
              "type": "string"
            },
            "acrResourceGroupName": {
              "type": "string"
            },
            "storageAccountConnectionString": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-01-01",
              "name": "[parameters('webAppName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "siteConfig": {
                  "acrUseManagedIdentityCreds": true,
                  "linuxFxVersion": "[parameters('linuxFxVersion')]",
                  "alwaysOn": true,
                  "appSettings": [
                    {
                      "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                      "value": "false"
                    },
                    {
                      "name": "azureTableStorageConfiguration__tableStorageName",
                      "value": "aksupdates"
                    },
                    {
                      "name": "azureTableStorageConfiguration__tableStorageConnectionString",
                      "value": "[parameters('storageAccountConnectionString')]"
                    }
                  ]
                },
                "serverFarmId": "[parameters('appServicePlanResourceId')]"
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "acrroleassignment",
              "resourceGroup": "[parameters('acrResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2021-01-01', 'full').identity.principalId]"
                  },
                  "acrName": {
                    "value": "[parameters('acrName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "5705428169113315033"
                    }
                  },
                  "parameters": {
                    "acrName": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-04-01-preview",
                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('acrName'))]",
                      "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName')), parameters('principalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d'))]",
                      "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('webappResourceGroup')), 'Microsoft.Resources/deployments', parameters('hostingplanName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('webappResourceGroup'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('storageResourceGroup')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('storageAccountName')]",
      "resourceGroup": "[parameters('storageResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "15246952206079269462"
            }
          },
          "parameters": {
            "storageAccountType": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
              ],
              "metadata": {
                "description": "Storage Account type"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[format('store{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "The name of the Storage Account"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-06-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "kind": "StorageV2",
              "properties": {}
            }
          ],
          "outputs": {
            "blobStorageConnectionString": {
              "type": "string",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-06-01').keys[0].value)]"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('storageResourceGroup'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('functionAppName')]",
      "resourceGroup": "[parameters('functionResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "functionAppName": {
            "value": "[parameters('functionAppName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('functionAppName')]"
          },
          "storageAccountName": {
            "value": "[parameters('functionStorageAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "4443195380415370480"
            }
          },
          "parameters": {
            "appServicePlanName": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[parameters('functionAppName')]"
            },
            "appInsightsName": {
              "type": "string",
              "defaultValue": "[parameters('functionAppName')]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[parameters('appInsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              },
              "tags": {
                "[format('hidden-link:/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/sites/{2}', subscription().id, resourceGroup().name, parameters('functionAppName'))]": "Resource"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2020-08-01-preview",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2"
              },
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "kind": "linux",
              "sku": {
                "name": "Y1",
                "tier": "Dynamic"
              },
              "properties": {
                "reserved": true
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2018-11-01",
              "name": "[parameters('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp,linux",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "siteConfig": {
                  "linuxFxVersion": "DOTNET|6.0",
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage__accountName",
                      "value": "[parameters('storageAccountName')]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[parameters('storageAccountName')]"
                    },                    
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).InstrumentationKey]"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2020-08-01-preview').keys[0].value)]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('functionResourceGroup'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}settings', parameters('functionAppName'))]",
      "resourceGroup": "[parameters('functionResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "functionAppName": {
            "value": "[parameters('functionAppName')]"
          },
          "applicationId": {
            "value": "[parameters('applicationId')]"
          },
          "servicePrincipalPassword": {
            "value": "[parameters('servicePrincipalPassword')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "tableStorageConnectionString": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('storageResourceGroup')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))).outputs.blobStorageConnectionString.value]"
          },
          "tableStorageName": {
            "value": "[parameters('tableStorageName')]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          },
          "toggleSendNotifications": {
            "value": "[parameters('toggleSendNotifications')]"
          },
          "twitterAccessToken": {
            "value": "[parameters('twitterAccessToken')]"
          },
          "twitterAccessTokenSecret": {
            "value": "[parameters('twitterAccessTokenSecret')]"
          },
          "twitterApiKey": {
            "value": "[parameters('twitterApiKey')]"
          },
          "twitterApiSecretKey": {
            "value": "[parameters('twitterApiSecretKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "3503440729615144772"
            }
          },
          "parameters": {
            "functionAppName": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "applicationId": {
              "type": "string"
            },
            "servicePrincipalPassword": {
              "type": "string"
            },
            "twitterApiKey": {
              "type": "string"
            },
            "twitterApiSecretKey": {
              "type": "string"
            },
            "twitterAccessToken": {
              "type": "string"
            },
            "twitterAccessTokenSecret": {
              "type": "string"
            },
            "toggleSendNotifications": {
              "type": "bool"
            },
            "tableStorageConnectionString": {
              "type": "string"
            },
            "tableStorageName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/slots/config",
              "apiVersion": "2016-08-01",
              "name": "[format('{0}/appsettings', parameters('functionAppName'))]",
              "properties": {
                "tenantId": "[parameters('tenantId')]",
                "subscriptionId": "[parameters('subscriptionId')]",
                "applicationId": "[parameters('applicationId')]",
                "servicePrincipalPassword": "[parameters('servicePrincipalPassword')]",
                "tableStorageName": "[parameters('tableStorageName')]",
                "tableStorageConnectionString": "[parameters('tableStorageConnectionString')]",
                "twitterApiKey": "[parameters('twitterApiKey')]",
                "twitterApiSecretKey": "[parameters('twitterApiSecretKey')]",
                "twitterAccessToken": "[parameters('twitterAccessToken')]",
                "twitterAccessTokenSecret": "[parameters('twitterAccessTokenSecret')]",
                "toggle_SendNotification": "[parameters('toggleSendNotifications')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('functionResourceGroup'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('storageResourceGroup')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    }
  ]
}