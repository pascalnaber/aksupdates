on:
  push:
    branches:
      - master

env:  
  DOTNET_VERSION: "3.1.100"
  FUNCION_APP_NAME: aksupdates-dev
  OUTPUT_PATH: "output"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2          
      
    - name: Setup .NET Core ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Publish Azure Function project
      run: |
        # mkdir ${{ env.OUTPUT_PATH }}
        pushd ./src
        dotnet publish --configuration Release --output ${{ env.OUTPUT_PATH }}
        popd 

    - name: Copy Azure Function Package to artifacts
      uses: actions/upload-artifact@v1
      with:
        name: functions
        path: ./src/${{ env.OUTPUT_PATH }}
    
    - name: Copy infra to artifacts
      uses: actions/upload-artifact@v1
      with:
        name: infra
        path: ./infra
        
  deploy:
    name: Release to Azure
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download Azure Function Package artifacts
        uses: actions/download-artifact@v1
        with:
          name: functions
          path: ${{ env.OUTPUT_PATH }}

      - name: Download infra artifacts
        uses: actions/download-artifact@v1
        with:
          name: infra
          path: ${{ env.OUTPUT_PATH }}

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: 'Publish Azure Functions'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.FUNCION_APP_NAME }}       
          package: ${{ env.OUTPUT_PATH }}

      - name: Configure environment variables
        env:          
          tenantId: ${{ secrets.tenantId }}
          subscriptionId: ${{ secrets.subscriptionId }}
          applicationId: ${{ secrets.applicationId }}
          servicePrincipalPassword: ${{ secrets.servicePrincipalPassword }}
          twitterApiKey: ${{ secrets.twitterApiKey }}
          twitterApiSecretKey: ${{ secrets.twitterApiSecretKey }}
          twitterAccessToken: ${{ secrets.twitterAccessToken }}
          twitterAccessTokenSecret: ${{ secrets.twitterAccessTokenSecret }}
        run: |  
          pushd ${{ env.OUTPUT_PATH }}/infra/configuration  
          chmod +x ./configuration.sh
          ./configuration.sh aksupdates-dev.config
          popd
         